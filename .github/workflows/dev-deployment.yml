name: Dev Deployment

on:
  push:
    branches:
      - dev

jobs:
  build_and_push:
    runs-on: self-hosted
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Build and push
        uses: docker/build-push-action@v6
        with:
          file: docker/development/Dockerfile
          push: true
          tags: hngtechie/bingofe:dev

  deploy_to_dev:
    needs: build_and_push
    if: github.event.repository.fork == false
    runs-on: self-hosted

    steps:
      - name: Deploy to dev environment
        uses: appleboy/ssh-action@v1.0.3
        with:
          host: ${{ secrets.HOST }}
          username: ${{ secrets.USERNAME }}
          password: ${{ secrets.PASSWORD }}
          script: |
            cd bingofe/dev/bingo_fe
            ./scripts/dev_deploy.sh
# name: Dev Deployment

# on:
#   push:
#     branches:
#       - dev

# jobs:
#   cleanup:
#     runs-on: self-hosted
#     steps:
#       - name: Delete Old Artifacts
#         uses: actions/github-script@v6
#         with:
#           script: |
#             const res = await github.rest.actions.listArtifactsForRepo({
#               owner: context.repo.owner,
#               repo: context.repo.repo,
#             })

#             res.data.artifacts.forEach(async ({ id }) => {
#               await github.rest.actions.deleteArtifact({
#                 owner: context.repo.owner,
#                 repo: context.repo.repo,
#                 artifact_id: id,
#               })
#             })

#   build:
#     needs: cleanup
#     runs-on: self-hosted
#     steps:
#       - uses: actions/checkout@v2

#       - name: Build Docker image
#         run: docker build -t hngtechie/bingofe:dev -f docker/development/Dockerfile .

#       - name: Save and compress Docker image
#         run: |
#           docker save hngtechie/bingofe:dev > bingofe-dev.tar
#           gzip bingofe-dev.tar

#       - name: Upload artifact
#         uses: actions/upload-artifact@v2
#         with:
#           name: docker-image
#           path: bingofe-dev.tar.gz
#           retention-days: 1

#   deploy-to-dev:
#     needs: build
#     runs-on: self-hosted
#     if: github.event.repository.fork == false
#     steps:
#       - name: Download artifact
#         uses: actions/download-artifact@v2
#         with:
#           name: docker-image
#           path: .

#       - name: Copy to server
#         uses: appleboy/scp-action@master
#         with:
#           host: ${{ secrets.HOST }}
#           username: ${{ secrets.USERNAME }}
#           password: ${{ secrets.PASSWORD }}
#           source: "bingofe-dev.tar.gz"
#           target: "/tmp/bingofe"

#       - name: Deploy on server
#         uses: appleboy/ssh-action@master
#         with:
#           host: ${{ secrets.HOST }}
#           username: ${{ secrets.USERNAME }}
#           password: ${{ secrets.PASSWORD }}
#           script: |
#             cd /tmp/bingofe
#             gunzip bingofe-dev.tar.gz
#             docker load < bingofe-dev.tar
#             rm -f bingofe-dev.tar
#             cd /home/${{ secrets.USERNAME }}/bingofe/dev/bingo_fe
#             chmod +x ./scripts/*.sh
#             ./scripts/dev_deploy.sh
